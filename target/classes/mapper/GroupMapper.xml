<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.GroupMapper">
	<cache />

	<sql id="BaseColumns">
		GROUPID AS groupId,
		MATCHINGID AS matchingId,
		REPRESENTATIVEID AS representativeId,
		HEADCOUNT AS headCount
		CURRENTHEAD AS currentHead
	</sql>

	<select id="selectAppliedGroupByUserId" parameterType="long" 
		resultType="model.Group">
		SELECT <include refid="BaseColumns"/>
		FROM COMMENTS
		WHERE comment_no = #{commentNo}
	</select>
 
	
	
	<resultMap id="groupResultMap" type="Group">
		<id column="GROUPID" jdbcType="NUMERIC" property="groupId" />
		<result column="TALENTID" jdbcType="NUMERIC" property="talentId" />
		<result column="MATCHINGID" jdbcType="NUMERIC" property="matchingId" />
		<result column="HEADCOUNT" jdbcType="NUMERIC" property="headCount" />
		<result column="CURRENTHEAD" jdbcType="NUMERIC" property="members" />
		<collection property="users" ofType="User">
			<id property="userId" column="USERID" />
			<result property="nickname" column="NICKNAME" />
		</collection>
	</resultMap>

	<select id="selectAppliedGroupMatchingList" parameterType="long" 		
		resultMap="groupResultMap"> 
		SELECT MATCHING.MATCHINGID AS MATCHINGID, 
		TALENT.TALENTID AS TALENTID, 
		TALENT.TITLE AS TITLE, 
		MATCHING.MATCHINGSTATE AS MATCHINGSTATE 
		GROUPING.GROUPID AS GROUPID
		FROM MATCHING, TALENT, GROUPING, GROUPMEMBERS 
		WHERE MATCHING.MATCHINGID=GROUPING.MATCHINGID AND TALENT.TALENTID=GROUPING.TALENTID AND GROUPING.GROUPID=GROUPMEMBERS.GROUPID 
	</select>
	
	<select id="selectCommentByPrimaryKeyAssociation2" parameterType="long" 		
		resultType="Comment"> 
		SELECT c.comment_no AS commentNo,
			   c.user_id AS userId,
			   c.comment_content AS commentContent,
			   c.reg_date AS regDate,
			   u.user_id AS user.userId,
			   u.user_name AS user.userName, 			   
			   u.phone AS user.phone,
			   u.address AS user.address
		FROM COMMENTS c, USERS u			
		WHERE c.user_id = u.user_id  
		  AND c.comment_no = #{commentNo} 
	</select>
	
	
	<resultMap id="collectionResultMap" type="Comment">
		<id column="comment_no" jdbcType="BIGINT" property="commentNo" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
		<result column="reg_date" jdbcType="TIMESTAMP" property="regDate" />
		<collection property="replies" ofType="Reply">
			<id property="replyId" column="reply_id" />
			<result property="userId" column="reply_user_id" />
			<result property="replyContent" column="reply_content" />
			<result property="regDate" column="reply_date" />
		</collection>
	</resultMap>
	
	<select id="selectCommentByPrimaryKeyCollection" parameterType="long" 			
		resultMap="collectionResultMap"> 
		SELECT c.comment_no, c.user_id, c.comment_content, c.reg_date, 
			r.reply_id, r.user_id AS reply_user_id, r.reply_content, r.reg_date AS reply_date
		FROM COMMENTS c, REPLY r
		WHERE c.comment_no = r.comment_no 
		  AND c.comment_no = #{commentNo} 
	</select>
	
	<insert id="insertReply" parameterType="model.Reply">
		INSERT INTO REPLY (reply_id, comment_no, user_id, reply_content, reg_date)
		VALUES (#{replyId}, #{commentNo}, #{userId}, #{replyContent}, #{regDate})
	</insert>

	<delete id="deleteAllReplies">
		DELETE FROM REPLY
	</delete>

</mapper>